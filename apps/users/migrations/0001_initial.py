# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-08-26 17:20
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rbac', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='', max_length=20, verbose_name='姓名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('gender', models.CharField(choices=[('male', '男'), ('famale', '女')], default='male', max_length=10, verbose_name='性别')),
                ('mobile', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('email', models.EmailField(max_length=100, verbose_name='邮箱')),
                ('image', models.ImageField(blank=True, default='image/default.jpg', null=True, upload_to='image/%Y/%m')),
                ('post', models.CharField(blank=True, max_length=50, null=True, verbose_name='职位')),
                ('joined_date', models.DateField(blank=True, null=True, verbose_name='入职日期')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='名称')),
                ('type', models.CharField(choices=[('firm', '公司'), ('department', '部门')], default='department', max_length=20, verbose_name='类型')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Structure', verbose_name='父类架构')),
            ],
            options={
                'verbose_name': '组织架构',
                'verbose_name_plural': '组织架构',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=255, verbose_name='用户名')),
                ('recommend_user_phone', models.CharField(default='', max_length=255, verbose_name='推荐人手机号')),
                ('phone', models.CharField(max_length=255, unique=True, verbose_name='手机号')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '冻结')], default=2, verbose_name='状态')),
                ('login_password', models.CharField(max_length=255, verbose_name='登陆密码')),
                ('safe_password', models.CharField(max_length=255, verbose_name='安全密码')),
                ('static_money', models.FloatField(default=0, verbose_name='静态钱包')),
                ('dynamic_money', models.FloatField(default=0, verbose_name='动态钱包')),
                ('wechat', models.CharField(default='', max_length=255, verbose_name='微信')),
                ('alipay', models.CharField(default='', max_length=255, verbose_name='支付宝')),
                ('register_time', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('active_code', models.IntegerField(default=0, verbose_name='激活码')),
                ('money_for_arrange', models.IntegerField(default=0, verbose_name='排单币')),
                ('bank_no', models.CharField(default='', max_length=255, verbose_name='银行卡号')),
                ('bank_type', models.CharField(choices=[(1, '中国工商银行'), (2, '中国农业银行'), (3, '中国银行'), (4, '中国建设银行'), (5, '中国交通银行'), (6, '中国邮政储蓄银行'), (7, '中国招商银行'), (8, '中国浦发银行'), (9, '中信银行'), (10, '中国光大银行'), (11, '中国华夏银行'), (12, '中国民生银行'), (13, '中国广发银行'), (50, '其他')], default=1, max_length=255, verbose_name='卡号类型')),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Structure', verbose_name='部门'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='roles',
            field=models.ManyToManyField(blank=True, to='rbac.Role', verbose_name='角色'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='superior',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='上级主管'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
